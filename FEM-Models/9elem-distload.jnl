from part import *
from material import *
from section import *
from optimization import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ExpressionField(description='', expression=
    '10 *  (X+1.5) + 270 ', localCsys=None, name='Force-Plastic')
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-2', side1Edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Step-1', 
    distributionType=FIELD, field='Force-Plastic', magnitude=-1.0, name=
    'Load-2', region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-2'])
mdb.models['Model-1'].analyticalFields.changeKey(fromName='Force', toName=
    'Force-Elastic')
mdb.models['Model-1'].loads['Load-1'].setValues(field='Force-Elastic')
mdb.models['Model-1'].analyticalFields['Force-Plastic'].setValues(expression=
    '10*(X+1.5) + 270 ')
mdb.models['Model-1'].loads['Load-1'].suppress()
mdb.models['Model-1'].Material(name='Material-Plastic', objectToCopy=
    mdb.models['Model-1'].materials['Material-1'])
mdb.models['Model-1'].materials.changeKey(fromName='Material-1', toName=
    'Material-Elastic')
mdb.models['Model-1'].sections['Section-1'].setValues(material=
    'Material-Elastic', thickness=0.1)
mdb.models['Model-1'].materials['Material-Plastic'].userMaterial.setValues(
    mechanicalConstants=(0.0, 0.0, 210000.0, 0.3, 0.0, 2.0, 565.0, 0.00781, 
    0.26, 0.0, 0.0))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='9elem-distload-plastic', 
    nodalOutputPrecision=SINGLE, numCpus=1, numGPUs=0, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine=
    'C:\\Users\\Miguel\\Documents\\GitHub\\virtual-fields-method\\FEM-Models\\ummdp_abaqus.obj'
    , waitHours=0, waitMinutes=0)
mdb.models['Model-1'].loads.changeKey(fromName='Load-1', toName='Load-Elastic')
mdb.models['Model-1'].loads.changeKey(fromName='Load-2', toName='Load-Plastic')
mdb.models['Model-1'].sections['Section-1'].setValues(material=
    'Material-Plastic', thickness=0.1)
mdb.models['Model-1'].steps['Step-1'].setValues(initialInc=0.2, noStop=OFF, 
    timeIncrementationMethod=FIXED)
mdb.jobs['9elem-distload-plastic'].submit(consistencyChecking=OFF)
mdb.jobs['9elem-distload-plastic']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'Miguel-PC', 'handle': 0, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER HOURGLASS = STIFFNESS ON THE SECTION CONTROLS OPTION IS RELEVANT FOR THESE ELEMENTS: C3D8R, CAX4R, CGAX4R, CPEG4R, CPE4R, CPS4R, M3D4R, M3D9R, S4R5, S4R, S8R5, S9R5, SC6R, SC8R AND THEIR HYBRID, THERMAL AND PRESSURE COUNTERPARTS WHEREVER APPLICABLE. IT IS ALSO RELEVANT FOR ALL TYPES OF MODIFIED TRIANGULAR AND TETRAHEDRAL ELEMENTS. THIS WARNING CAN BE IGNORED IF THE FEATURE IS APPLIED TO THESE ELEMENT TYPES ONLY.', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE *HOURGLASS STIFFNESS OPTION IS RELEVANT FOR THESE ELEMENTS ONLY: C3D4H, C3D8R, C3D8RH, EC3D8R, EC3D8RT, C3D10M, C3D10MH, CAX4R, CAX4RH, CAX6M, CAX6MH, CPEG4R, CPEG4RH, CPE4R, CPE4RH, CPE6M, CPE6MH, CPS4R, CPS6M, M3D4R, M3D9R, S3/S3R, S4/S4R, S4R5,S8R, S8R5, S9R5, SC6R, SC8R, STRI3, AND SAXA ELEMENTS. FOR THESE ELEMENTS ONLY THE DRILL SCALE FACTOR IS RELEVANT: STRI3, S3/S3R, S4, S8R, AND SAXA ELEMENTS.', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST CF HAS BEEN REMOVED AS THERE ARE NO APPLICABLE LOADS IN THIS STEP', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\Miguel\\Documents\\GitHub\\virtual-fields-method\\FEM-Models\\9elem-distload-plastic.odb', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'Miguel-PC', 'handle': 8832, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': '9elem-distload-plastic', 
    'memory': 24.0})
mdb.jobs['9elem-distload-plastic']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32369.0, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 17.0, 'phase': STANDARD_PHASE, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 1, 'stepTime': 0.2, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 0.4, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 2, 'stepTime': 0.4, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 0.6, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 3, 'stepTime': 0.6, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 0.8, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 4, 'stepTime': 0.8, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 5, 'stepTime': 1.0, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['9elem-distload-plastic']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar  8 18:28:23 2022', 'jobName': '9elem-distload-plastic'})
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'LE', 'U', 'RF', 'COORD', 'SDV', 'UVARM'))
mdb.jobs['9elem-distload-plastic'].submit(consistencyChecking=OFF)
mdb.jobs['9elem-distload-plastic']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'Miguel-PC', 'handle': 0, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER HOURGLASS = STIFFNESS ON THE SECTION CONTROLS OPTION IS RELEVANT FOR THESE ELEMENTS: C3D8R, CAX4R, CGAX4R, CPEG4R, CPE4R, CPS4R, M3D4R, M3D9R, S4R5, S4R, S8R5, S9R5, SC6R, SC8R AND THEIR HYBRID, THERMAL AND PRESSURE COUNTERPARTS WHEREVER APPLICABLE. IT IS ALSO RELEVANT FOR ALL TYPES OF MODIFIED TRIANGULAR AND TETRAHEDRAL ELEMENTS. THIS WARNING CAN BE IGNORED IF THE FEATURE IS APPLIED TO THESE ELEMENT TYPES ONLY.', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'FOR TWO-DIMENSIONAL MODELS, IF A NON-UNITY THICKNESS IS SPECIFIED FOR TWO-DIMENSIONAL SOLID ELEMENTS AND THESE ELEMENTS ARE INVOLVED IN AN INTERACTION SUCH AS CONTACT, THE SAME THICKNESS SHOULD BE SPECIFIED FOR THE OUT-OF-PLANE THICKNESS OF THE CORRESPONDING SURFACE UNDER *SURFACE INTERACTION.', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE *HOURGLASS STIFFNESS OPTION IS RELEVANT FOR THESE ELEMENTS ONLY: C3D4H, C3D8R, C3D8RH, EC3D8R, EC3D8RT, C3D10M, C3D10MH, CAX4R, CAX4RH, CAX6M, CAX6MH, CPEG4R, CPEG4RH, CPE4R, CPE4RH, CPE6M, CPE6MH, CPS4R, CPS6M, M3D4R, M3D9R, S3/S3R, S4/S4R, S4R5,S8R, S8R5, S9R5, SC6R, SC8R, STRI3, AND SAXA ELEMENTS. FOR THESE ELEMENTS ONLY THE DRILL SCALE FACTOR IS RELEVANT: STRI3, S3/S3R, S4, S8R, AND SAXA ELEMENTS.', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\Miguel\\Documents\\GitHub\\virtual-fields-method\\FEM-Models\\9elem-distload-plastic.odb', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'Miguel-PC', 'handle': 10776, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(MEMORY_ESTIMATE, {
    'phase': STANDARD_PHASE, 'jobName': '9elem-distload-plastic', 
    'memory': 24.0})
mdb.jobs['9elem-distload-plastic']._Message(PHYSICAL_MEMORY, {
    'phase': STANDARD_PHASE, 'physical_memory': 32369.0, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(MINIMUM_MEMORY, {
    'minimum_memory': 17.0, 'phase': STANDARD_PHASE, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 0.2, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 1, 'stepTime': 0.2, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 2, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 0.4, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 2, 'stepTime': 0.4, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 3, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 0.6, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 3, 'stepTime': 0.6, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 3, 'phase': STANDARD_PHASE, 'equilibrium': 3})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 4, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 0.8, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 4, 'stepTime': 0.8, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 4, 'phase': STANDARD_PHASE, 'equilibrium': 4})
mdb.jobs['9elem-distload-plastic']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 5, 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(STATUS, {'totalTime': 1.0, 
    'attempts': 1, 'timeIncrement': 0.2, 'increment': 5, 'stepTime': 1.0, 
    'step': 1, 'jobName': '9elem-distload-plastic', 'severe': 0, 
    'iterations': 7, 'phase': STANDARD_PHASE, 'equilibrium': 7})
mdb.jobs['9elem-distload-plastic']._Message(END_STEP, {'phase': STANDARD_PHASE, 
    'stepId': 1, 'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': '9elem-distload-plastic'})
mdb.jobs['9elem-distload-plastic']._Message(JOB_COMPLETED, {
    'time': 'Tue Mar  8 18:30:27 2022', 'jobName': '9elem-distload-plastic'})
# Save by Miguel on 2022_03_08-18.31.25; build 2019 2018_09_24-20.41.51 157541
